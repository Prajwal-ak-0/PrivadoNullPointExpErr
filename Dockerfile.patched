FROM public.ecr.aws/privado/privado:latest

# Install necessary tools
RUN apt-get update && apt-get install -y \
    curl \
    procps \
    && rm -rf /var/lib/apt/lists/*

# Create a wrapper script for Java that disables container detection
RUN echo '#!/bin/bash' > /usr/local/java/jdk-18.0.2/bin/java.wrapper && \
    echo 'exec /usr/local/java/jdk-18.0.2/bin/java.real \
    -XX:-UseContainerSupport \
    -Djdk.internal.platform.useContainerSupport=false \
    "$@"' >> /usr/local/java/jdk-18.0.2/bin/java.wrapper && \
    chmod +x /usr/local/java/jdk-18.0.2/bin/java.wrapper

# Rename the original Java binary and replace it with our wrapper
RUN mv /usr/local/java/jdk-18.0.2/bin/java /usr/local/java/jdk-18.0.2/bin/java.real && \
    mv /usr/local/java/jdk-18.0.2/bin/java.wrapper /usr/local/java/jdk-18.0.2/bin/java

# Set environment variables to disable container support
ENV JAVA_TOOL_OPTIONS="-XX:-UseContainerSupport -Djdk.internal.platform.useContainerSupport=false"
ENV _JAVA_OPTIONS="-XX:-UseContainerSupport -Djdk.internal.platform.useContainerSupport=false"

# Create a dummy internal config directory
RUN mkdir -p /privado-core/config

# Create a simple entrypoint script
RUN echo '#!/bin/bash' > /entrypoint.sh && \
    echo 'echo "Running Privado with cgroup v2 compatibility fix..."' >> /entrypoint.sh && \
    echo 'if [ "$1" = "scan" ]; then' >> /entrypoint.sh && \
    echo '  # Get the target directory from arguments' >> /entrypoint.sh && \
    echo '  TARGET_DIR="${@: -1}"' >> /entrypoint.sh && \
    echo '  if [ "$TARGET_DIR" = "." ]; then' >> /entrypoint.sh && \
    echo '    TARGET_DIR="/app"' >> /entrypoint.sh && \
    echo '  elif [[ "$TARGET_DIR" != /* ]]; then' >> /entrypoint.sh && \
    echo '    # If relative path, prepend /app/' >> /entrypoint.sh && \
    echo '    TARGET_DIR="/app/$TARGET_DIR"' >> /entrypoint.sh && \
    echo '  fi' >> /entrypoint.sh && \
    echo '  # Create .privado directory in the app directory' >> /entrypoint.sh && \
    echo '  mkdir -p "$TARGET_DIR/.privado"' >> /entrypoint.sh && \
    echo '  # Run privado-core with the correct parameters' >> /entrypoint.sh && \
    echo '  exec /privado-core/bin/privado-core scan --internal-config /privado-core/config "$TARGET_DIR"' >> /entrypoint.sh && \
    echo 'else' >> /entrypoint.sh && \
    echo '  exec /privado-core/bin/privado-core "$@"' >> /entrypoint.sh && \
    echo 'fi' >> /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Set the entrypoint
ENTRYPOINT ["/entrypoint.sh"]
